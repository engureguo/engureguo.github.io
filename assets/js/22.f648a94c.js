(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{294:function(a,t,s){a.exports=s.p+"assets/img/image-20240222223823372.4f239ef2.png"},307:function(a,t,s){"use strict";s.r(t);var e=s(14),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"gcc-入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gcc-入门"}},[a._v("#")]),a._v(" GCC 入门")]),a._v(" "),t("h2",{attrs:{id:"gcc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gcc"}},[a._v("#")]),a._v(" GCC")]),a._v(" "),t("h3",{attrs:{id:"介绍及安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍及安装"}},[a._v("#")]),a._v(" 介绍及安装")]),a._v(" "),t("p",[t("code",[a._v("gcc")]),a._v(" 是 Linux 下的编译工具集，是 "),t("code",[a._v("GNU Compiler Collection")]),a._v(" 的缩写，该工具集不仅包含 "),t("code",[a._v("gcc")]),a._v("、"),t("code",[a._v("g++")]),a._v(" 等编译器，还包含其它工具集比如 "),t("code",[a._v("ar")]),a._v("、"),t("code",[a._v("nm")]),a._v(" 等。")]),a._v(" "),t("p",[a._v("GCC 工具集不仅能编译 C/C++ 语言，其他例如 Objective-C、Pascal、Fortran、Java、Ada 等语言均能进行编译。GCC 在可以根据不同的硬件平台进行编译，既能进行"),t("strong",[a._v("交叉编译")]),a._v("，即在 A 平台上编译 B 平台的程序，支持常见的 X86、ARM、PowerPC、mips 等，以及 Linux、Windows 等软件平台。")]),a._v(" "),t("p",[a._v("安装")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("gcc "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v("\ng++ "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" apt/yum update\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" apt/yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" gcc g++\n")])])]),t("h3",{attrs:{id:"工作流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[a._v("#")]),a._v(" 工作流程")]),a._v(" "),t("p",[a._v("GCC 编译器对程序的编译分为四个阶段：")]),a._v(" "),t("ol",[t("li",[a._v("预处理：本阶段主要内容是"),t("strong",[a._v("展开头文件")]),a._v("、"),t("strong",[a._v("宏替换")]),a._v("和"),t("strong",[a._v("去掉注释行")]),a._v("。这个阶段需要使用预处理器来完成，最终得到的还是文本格式的源文件")]),a._v(" "),t("li",[a._v("编译：这个阶段需要调用编译器对文件进行编译，最终得到一个汇编文件")]),a._v(" "),t("li",[a._v("汇编：这个阶段需要调用汇编器对文件进行汇编，最终得到一个二进制文件")]),a._v(" "),t("li",[a._v("链接：这个阶段需要调用链接器链接程序调用的库，最终得到是一个可执行的二进制文件")])]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("文件后缀")]),a._v(" "),t("th",[a._v("说明")]),a._v(" "),t("th",[a._v("gcc 参数")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[t("code",[a._v(".c")])]),a._v(" "),t("td",[a._v("源文件")]),a._v(" "),t("td",[a._v("无")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v(".i")])]),a._v(" "),t("td",[a._v("预处理后的 c 文件")]),a._v(" "),t("td",[t("code",[a._v("-E")])])]),a._v(" "),t("tr",[t("td",[t("code",[a._v(".s")])]),a._v(" "),t("td",[a._v("编译之后得到的汇编文件")]),a._v(" "),t("td",[t("code",[a._v("-S")])])]),a._v(" "),t("tr",[t("td",[t("code",[a._v(".o")])]),a._v(" "),t("td",[a._v("汇编后得到的二进制文件")]),a._v(" "),t("td",[t("code",[a._v("-c")])])])])]),a._v(" "),t("p",[t("strong",[a._v("示例：分阶段展示 GCC 工作步骤")])]),a._v(" "),t("p",[a._v("1、准备"),t("code",[a._v("main.c")])]),a._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("<stdio.h>")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("define")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[a._v("NUMBER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")])])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("ifdef")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[a._v("DEBUG_MODE")])]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"我是一个程序猿，但不会爬树...\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("endif")])]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" NUMBER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello, GCC!!\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("2、预处理："),t("code",[a._v("gcc -E main.c -o main.i")]),a._v("（"),t("code",[a._v("-o")]),a._v(" 指定输出文件）")]),a._v(" "),t("p",[t("code",[a._v("main.i")])]),a._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[a._v("# "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"main.c"')]),a._v("\n# "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<built-in>"')]),a._v("\n# "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<command-line>"')]),a._v("\n# "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("31")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<command-line>"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n\n# "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"main.c"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n# "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"main.c"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello, GCC!!\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("3、汇编："),t("code",[a._v("gcc -S main.i -o main.s")])]),a._v(" "),t("p",[t("code",[a._v("main.s")]),a._v(" 内容为")]),a._v(" "),t("div",{staticClass:"language-assembly extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('\t.file\t"main.c"\n\t.text\n\t.section\t.rodata\n.LC0:\n\t.string\t"Hello, GCC!!"\n\t.text\n\t.globl\tmain\n\t.type\tmain, @function\nmain:\n.LFB0:\n\t.cfi_startproc\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tsubq\t$16, %rsp\n\tmovl\t$10, -8(%rbp)\n\tmovl\t$0, -4(%rbp)\n\tjmp\t.L2\n.L3:\n\tmovl\t$.LC0, %edi\n\tcall\tputs\n\taddl\t$1, -4(%rbp)\n.L2:\n\tcmpl\t$2, -4(%rbp)\n\tjle\t.L3\n\tmovl\t$0, %eax\n\tleave\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n.LFE0:\n\t.size\tmain, .-main\n\t.ident\t"GCC: (GNU) 8.5.0 20210514 (Red Hat 8.5.0-4)"\n\t.section\t.note.GNU-stack,"",@progbits\n')])])]),t("p",[a._v("4、编译："),t("code",[a._v("gcc -c main.s -o main.o")])]),a._v(" "),t("p",[a._v("获取的 "),t("code",[a._v("main.o")]),a._v(" 为一个二进制文件")]),a._v(" "),t("p",[a._v("5、链接："),t("code",[a._v("gcc main.o -o test")])]),a._v(" "),t("p",[a._v("获取到可执行文件 "),t("code",[a._v("test")]),a._v("，执行："),t("code",[a._v("./test")])]),a._v(" "),t("p",[t("strong",[a._v("示例：GCC 一步编译")])]),a._v(" "),t("p",[t("code",[a._v("gcc main.c -o app")]),a._v("（这一步相当于链接操作，之前的三步是自动完成的）")]),a._v(" "),t("p",[a._v("也可以简化为 "),t("code",[a._v("gcc main.c")]),a._v(" 生成的可执行程序名为 "),t("code",[a._v("a.out")])]),a._v(" "),t("h3",{attrs:{id:"常用参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用参数"}},[a._v("#")]),a._v(" 常用参数")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("编译选项")]),a._v(" "),t("th",[a._v("描述")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[t("code",[a._v("-E")])]),a._v(" "),t("td",[a._v("预处理源文件。比如 "),t("code",[a._v("gcc -E main.c -o main.i")])])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-S")])]),a._v(" "),t("td",[a._v("编译处理。如果指定 "),t("code",[a._v(".c")]),a._v(" 文件时会自动进行预处理。"),t("br"),a._v("比如 "),t("code",[a._v("gcc -S main.i -o main.s")])])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-c")])]),a._v(" "),t("td",[a._v("汇编处理。指定"),t("code",[a._v(".c")]),a._v("或"),t("code",[a._v(".i")]),a._v("或"),t("code",[a._v(".s")]),a._v("文件时会自动进行预处理和编译"),t("br"),a._v("比如 "),t("code",[a._v("gcc -c main.s -o main.o")])])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-o")])]),a._v(" "),t("td",[a._v("指定输出文件。有两种形式："),t("br"),a._v("1、"),t("code",[a._v("-o target source")]),a._v(" 比如 "),t("code",[a._v("gcc -E -o main.i main.c")]),t("br"),a._v("2、"),t("code",[a._v("source -o target")]),a._v(" 比如 "),t("code",[a._v("gcc main.c -o app")])])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-I")])]),a._v(" "),t("td",[t("strong",[a._v("指定")]),a._v(" include 包含文件的"),t("strong",[a._v("搜索目录")]),a._v("，不用手动在 "),t("code",[a._v("#include")]),a._v(" 语句中指定路径")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-g")])]),a._v(" "),t("td",[a._v("指定该参数，在编译时会生成调试信息，可被调试器（gdb）调试")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-D")])]),a._v(" "),t("td",[a._v("在程序编译时指定宏，比如 "),t("code",[a._v("gcc -o app main.c -DDEBUG_MODE")])])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-w")])]),a._v(" "),t("td",[a._v("不生成任何警告信息，不建议使用，因为有时候警告就是错误")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-Wall")])]),a._v(" "),t("td",[a._v("生成所有警告信息")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-On")])]),a._v(" "),t("td",[a._v("指定编译器优化的级别，"),t("code",[a._v("n")]),a._v(" 的取值为 "),t("code",[a._v("0-3，")]),a._v("表示四个级别，"),t("br"),a._v("0 表示无优化，1 为默认值，3 优化级别最高")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-l")])]),a._v(" "),t("td",[a._v("指定编译时使用的库")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-L")])]),a._v(" "),t("td",[a._v("指定编译时搜索的库路径")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-fPIC/fpic")])]),a._v(" "),t("td",[a._v("生成与位置无关的代码")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-shared")])]),a._v(" "),t("td",[a._v("生成共享目标文件。通常用在建立共享库时")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("-std")])]),a._v(" "),t("td",[a._v("指定 C 方言，比如 "),t("code",[a._v("-std=c99")]),a._v("，gcc 默认方言是 "),t("code",[a._v("GNU C")])])])])]),a._v(" "),t("h3",{attrs:{id:"i-指定头文件路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#i-指定头文件路径"}},[a._v("#")]),a._v(" -I 指定头文件路径")]),a._v(" "),t("p",[a._v("起始项目："),t("a",{attrs:{href:"https://gitee.com/egu0/gcc_n_makefile/tree/93c7a9c737570908cb35cc94d6b829979fd9d8cc/gcc/02_include",target:"_blank",rel:"noopener noreferrer"}},[a._v("gcc/02_include · Eugene/gcc_n_makefile - 码云 - 开源中国 (gitee.com)"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".\n├── add.c\n├── div.c\n├── head.h\n├── main.c\n├── mul.c\n└── sub.c\n")])])]),t("p",[a._v("编译："),t("code",[a._v("gcc *.c")]),a._v("，获取到的 "),t("code",[a._v("a.out")]),a._v(" 可通过 "),t("code",[a._v("./a.out")]),a._v(" 执行")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("改变目录结构，将头文件放入 "),t("code",[a._v("include")]),a._v(" 文件夹内")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".\n├── add.c\n├── div.c\n├── include\n│   └── head.h\n├── main.c\n├── mul.c\n└── sub.c\n")])])]),t("p",[a._v("再次编译时出错")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('main.c:2:10: fatal error: head.h: No such file or directory\n #include "head.h"\n          ^~~~~~~~\ncompilation terminated.\n')])])]),t("p",[a._v("改进编译命令："),t("code",[a._v("gcc *.c -I include/")]),a._v("，使用 "),t("code",[a._v("-I")]),a._v(" 指定头文件搜索目录")]),a._v(" "),t("blockquote",[t("p",[t("code",[a._v("-I include/")]),a._v(" 也可以写为 "),t("code",[a._v("-Iinclude")]),a._v("，即参数和值之间不加空格")])]),a._v(" "),t("h3",{attrs:{id:"d-指定宏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#d-指定宏"}},[a._v("#")]),a._v(" -D 指定宏")]),a._v(" "),t("p",[a._v("如果不想在程序中定义宏，但想让它存在，可以使用 "),t("code",[a._v("-D")]),a._v(" 参数，编译器会认为参数后边指定的宏是程序中存在的。")]),a._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("<stdio.h>")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("define")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[a._v("NUMBER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")])])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("ifdef")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[a._v("DEBUG_MODE")])]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"我是一个程序猿，但不会爬树...\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("endif")])]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" NUMBER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello, GCC!!\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("编译："),t("code",[a._v("gcc main.c -o main -DDEBUG_MODE")])]),a._v(" "),t("blockquote",[t("p",[t("code",[a._v("-DDEBUG_MODE")]),a._v(" 就是 "),t("code",[a._v("-D DEBUG_MODE")])]),a._v(" "),t("p",[a._v("也可以为宏指定数值，比如 "),t("code",[a._v("-DNUMBER=10")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("[engure@ali 01_intro]$ ./main\n我是一个程序猿，但不会爬树...\nHello, GCC!!\nHello, GCC!!\nHello, GCC!!\n")])])]),t("h3",{attrs:{id:"gcc-与-g-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gcc-与-g-的区别"}},[a._v("#")]),a._v(" gcc 与 g++ 的区别")]),a._v(" "),t("p",[a._v("gcc 和 g++ 都能编译 c 或 cpp 程序，只不过在某些特别的方面是有区别的")]),a._v(" "),t("ol",[t("li",[t("strong",[a._v("编译阶段")]),a._v("： g++ 会调用 gcc，c 和 cpp 程序都由 gcc 编译。总之，gcc 和 g++ 都可以编译 c 和 cpp 代码。")]),a._v(" "),t("li",[t("strong",[a._v("链接阶段")]),a._v(" "),t("ol",[t("li",[a._v("对于 c 程序，gcc 和 g++ 都可以自动链接到标准 C 库")]),a._v(" "),t("li",[a._v("对于 cpp 程序，g++ 可以自动链接标准 C++ 库；如果需要使用 gcc 链接标准 C++ 库则需要添加"),t("code",[a._v("-lstdc++")]),a._v("参数")])])]),a._v(" "),t("li",[a._v("关于 "),t("code",[a._v("__cplusplus")]),a._v(" 宏的定义\n"),t("ol",[t("li",[a._v("g++ 会自动定义该宏，但这个不影响它去编译 c 程序")]),a._v(" "),t("li",[a._v("gcc 需要根据文件后缀判断是否要定义该宏")])])])]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("总结：")]),a._v(" "),t("ol",[t("li",[a._v("gcc 和 g++ 都可以编译 c 程序，编译程序的规则和参数都相同")]),a._v(" "),t("li",[a._v("g++ 可以编译 cpp 程序，gcc 编译 cpp 程序需要添加额外参数 "),t("code",[a._v("-lstdc++")])]),a._v(" "),t("li",[a._v("gcc 和 g++ 都可以定义 "),t("code",[a._v("__cplusplus")]),a._v(" 宏")])]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("动手实践")]),a._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//a.cpp")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("<iostream>")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("using")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello world!"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//test.c")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("<stdio.h>")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("define")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[a._v("NUMBER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")])])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("ifdef")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[a._v("DEBUG_MODE")])]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"我是一个程序猿，但不会爬树...\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" DEBUG_MODE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("endif")])]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" NUMBER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello, GCC!!\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("使用 "),t("code",[a._v("gcc")]),a._v(" 编译：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("gcc test.c")]),a._v(" ✅")]),a._v(" "),t("li",[t("code",[a._v("gcc a.cpp")]),a._v(" ❌")]),a._v(" "),t("li",[t("code",[a._v("gcc a.cpp -lstdc++")]),a._v("✅")])]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("g++")]),a._v(" 编译：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("g++ test.c")]),a._v("✅")]),a._v(" "),t("li",[t("code",[a._v("g++ a.cpp")]),a._v("✅")])]),a._v(" "),t("h2",{attrs:{id:"静态库和动态库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态库和动态库"}},[a._v("#")]),a._v(" 静态库和动态库")]),a._v(" "),t("p",[a._v("不管是 Linux 还是 Windows 中的库文件，其本质和工作模式都是相同的，只不过在不同的平台上库对应的文件格式和文件后缀不同。程序中调用的库有两种，"),t("strong",[a._v("静态库和动态库")]),a._v("，不管是哪种库文件，它们的本质还是源文件，只不过是"),t("strong",[a._v("二进制格式")]),a._v("，只有计算机能够识别。")]),a._v(" "),t("p",[a._v("在项目中使用库一般有两个目的，一是为了使程序"),t("strong",[a._v("更加简洁、不需要在项目中维护太多的源文件")]),a._v("，另一方面是为了"),t("strong",[a._v("源代码保密")]),a._v("，毕竟不是所有人都想把自己编写的程序开源出来。")]),a._v(" "),t("p",[a._v("当我们拿到了"),t("strong",[a._v("库文件")]),a._v("（动态库或静态库）之后想要使用还必须有这些库中提供的 API 函数的声明，也就是"),t("strong",[a._v("头文件")]),a._v("，把这些都添加到项目中，就可以写代码了。")]),a._v(" "),t("h3",{attrs:{id:"静态库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态库"}},[a._v("#")]),a._v(" 静态库")]),a._v(" "),t("p",[a._v("不同平台下静态库的命名规则：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Linux 中：前缀为 "),t("code",[a._v("lib")]),a._v("、后缀为 "),t("code",[a._v(".a")]),a._v("、中间为静态库的名字。比如 "),t("code",[a._v("libmath.a")])])]),a._v(" "),t("li",[t("p",[a._v("Windows 中：前缀为 "),t("code",[a._v("lib")]),a._v("、后缀为 "),t("code",[a._v(".lib")]),a._v("、中间为静态库的名字。比如 "),t("code",[a._v("libmath.lib")])])])]),a._v(" "),t("blockquote",[t("p",[a._v("Linux 中静态库由程序 "),t("code",[a._v("ar")]),a._v(" 生成，现在静态库已经不像以前那么普遍了，这主要是因为很多程序都在使用动态库。")])]),a._v(" "),t("h4",{attrs:{id:"制作静态库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#制作静态库"}},[a._v("#")]),a._v(" 制作静态库")]),a._v(" "),t("p",[a._v("步骤：")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("先对源文件进行汇编，获取二进制格式的目标文件")])]),a._v(" "),t("li",[t("p",[a._v("然后使用 "),t("code",[a._v("ar")]),a._v(" 工具将目标文件打包就可以得到静态文件，即静态库了")])])]),a._v(" "),t("p",[t("code",[a._v("ar")]),a._v(" 工具的三个参数：s")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("c")]),a._v(" 创建一个库")]),a._v(" "),t("li",[t("code",[a._v("s")]),a._v(" 创建目标文件索引，在创建较大的库时可以加快时间")]),a._v(" "),t("li",[t("code",[a._v("r")]),a._v(" 在库中插入或替换模块。默认新的成员添加在库的结尾处，如果模块名已经存在在库中，则替换同名的模块")])]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("实操：初始"),t("a",{attrs:{href:"https://gitee.com/egu0/gcc_n_makefile/tree/d56f97190699fba74df1e25f115ec404402ce0ee/static_dynamic_lib/01_create_static_lib",target:"_blank",rel:"noopener noreferrer"}},[a._v("目录结构"),t("OutboundLink")],1),a._v("为")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".\n├── add.c\n├── div.c\n├── include\n│   └── head.h\n├── main.c\n├── mul.c\n└── sub.c\n")])])]),t("p",[a._v("第一步：汇编，为 "),t("code",[a._v("add.c/sub.c/mul.c/div.c")]),a._v(" 分别生成目标文件 "),t("code",[a._v("gcc -c add.c sub.c mul.c div.c -Iinclude")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".\n├── add.c\n├── add.o\n├── div.c\n├── div.o\n├── include\n│   └── head.h\n├── main.c\n├── mul.c\n├── mul.o\n├── sub.c\n└── sub.o\n")])])]),t("p",[a._v("第二步：使用 ar 工具将目标文件打包到静态库")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("ar rcs libcalc.a add.o sub.o div.o mul.o\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ar rcs libcalc.a *.o")]),a._v("\n")])])]),t("p",[a._v("第三步：发布文件")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" libcalc.a\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" head.h\n")])])]),t("h4",{attrs:{id:"使用静态库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用静态库"}},[a._v("#")]),a._v(" 使用静态库")]),a._v(" "),t("p",[a._v("准备"),t("a",{attrs:{href:"https://gitee.com/egu0/gcc_n_makefile/tree/3887216c0d05a471b504e16f4855edd7d1ee615c/static_dynamic_lib/01_create_static_lib/test_generated_lib",target:"_blank",rel:"noopener noreferrer"}},[a._v("目录结构"),t("OutboundLink")],1),a._v("：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".\n├── head.h\n├── libcalc.a\n└── main.c\n")])])]),t("p",[a._v("编译："),t("code",[a._v("gcc main.c -o main -L. -lcalc")])]),a._v(" "),t("blockquote",[t("ul",[t("li",[t("p",[t("code",[a._v("-L")]),a._v(" 指定库所在路径")])]),a._v(" "),t("li",[t("p",[t("code",[a._v("-l")]),a._v(" 指定库名，这里的库名需要“掐头去尾”")])]),a._v(" "),t("li",[t("p",[a._v("参数和参数值之间可以不加空格")])])])]),a._v(" "),t("h3",{attrs:{id:"动态库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动态库"}},[a._v("#")]),a._v(" 动态库")]),a._v(" "),t("p",[a._v("不同平台下动态库的命名规则：")]),a._v(" "),t("ul",[t("li",[a._v("Linux 中，动态库以"),t("code",[a._v("lib")]),a._v("作为前缀、"),t("code",[a._v(".so")]),a._v("作为后缀，中间部分是库名。比如"),t("code",[a._v("libmath.so")])]),a._v(" "),t("li",[a._v("Windows 中，动态库一般以"),t("code",[a._v("lib")]),a._v("作为前缀、以"),t("code",[a._v(".dll")]),a._v("作为后缀，中间部分是库名。比如"),t("code",[a._v("libmath.dll")])])]),a._v(" "),t("h4",{attrs:{id:"制作动态库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#制作动态库"}},[a._v("#")]),a._v(" 制作动态库")]),a._v(" "),t("p",[a._v("制作步骤：")]),a._v(" "),t("ol",[t("li",[a._v("首先进行汇编。与制作静态库不同的是要添加另外一个参数： "),t("code",[a._v("-fPIC/-fpic")]),a._v("，作用是使得 gcc 生成的代码是"),t("strong",[a._v("与位置无关")]),a._v("的，也就是使用相对位置")]),a._v(" "),t("li",[a._v("然后将得到的目标文件"),t("strong",[a._v("打包")]),a._v("成动态库，依旧使用 gcc 工具，需要使用 "),t("code",[a._v("-shared")]),a._v(" 参数告诉编译器生成一个动态链接库")])]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("实操")]),a._v(" "),t("p",[a._v("准备"),t("a",{attrs:{href:"https://gitee.com/egu0/gcc_n_makefile/tree/3feddb7c88a1d1f0a3a2ae6fad68e95817120f43/static_dynamic_lib/02_create_dynamic_lib",target:"_blank",rel:"noopener noreferrer"}},[a._v("目录结构"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".\n├── add.c\n├── div.c\n├── include\n│   └── head.h\n├── main.c\n├── mul.c\n└── sub.c\n")])])]),t("p",[a._v("1、"),t("strong",[a._v("汇编")]),a._v("，生成目标文件 "),t("code",[a._v("gcc -c -fpic add.c sub.c mul.c div.c -Iinclude/")])]),a._v(" "),t("p",[a._v("2、打包，生成动态库")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("gcc "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-shared")]),a._v(" add.o sub.o mul.o div.o "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" libcalc.so\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# gcc -shared *.o -o libcalc.so")]),a._v("\n")])])]),t("p",[a._v("3、发布动态库")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("- libcalc.so\n- head.h\n")])])]),t("h4",{attrs:{id:"使用库文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用库文件"}},[a._v("#")]),a._v(" 使用库文件")]),a._v(" "),t("p",[a._v("准备"),t("a",{attrs:{href:"https://gitee.com/egu0/gcc_n_makefile/tree/41c1ec38c36ab012ccd77aa2f53225ff79d2e499/static_dynamic_lib/02_create_dynamic_lib/test_generated_lib",target:"_blank",rel:"noopener noreferrer"}},[a._v("目录结构"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".\n├── head.h\n├── libcalc.so\n└── main.c\n")])])]),t("p",[a._v("编译："),t("code",[a._v("gcc main.c -o main -L. -lcalc")]),a._v("，可以得到 main 可执行文件")]),a._v(" "),t("p",[a._v("执行 main 时出现错误")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("./main: error while loading shared libraries: libcalc.so: cannot open shared object file: No such file or directory\n")])])]),t("h3",{attrs:{id:"加载原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加载原理"}},[a._v("#")]),a._v(" 加载原理")]),a._v(" "),t("p",[t("strong",[a._v("静态库如何被加载")]),a._v("：在链接阶段，提供的静态库会被打包到可执行程序中。当可执行程序被执行时，静态库中的代码也会一并被加载到内存中，因此不会出现静态库找不到、无法比价在的问题")]),a._v(" "),t("p",[t("strong",[a._v("动态库如何被加载")]),a._v("：")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("链接阶段")]),a._v("：虽然 gcc 命令中也指定了库路径（"),t("code",[a._v("-L .")]),a._v("），但是这个路径并没有记录到可执行程序中，只是检查了这个路径下的库文件是否存在，对应的库文件并没有被打包到可执行程序中，只是在可执行程序中记录了库的名字。")]),a._v(" "),t("li",[t("strong",[a._v("执行阶段")]),a._v("：此时会"),t("strong",[a._v("先检查需要的动态库是否可以被加载")]),a._v("，如果加载不到则提示 “No such file or directory” 等无法找到 so 库的错误信息。"),t("strong",[a._v("当动态库中的函数在程序中被调用时，动态库才被加载到内存")]),a._v("，如果不调用则就不加载。动态库的检测和加载操作都是有动态链接器完成的。")])]),a._v(" "),t("hr"),a._v(" "),t("p",[t("strong",[a._v("动态链接器")])]),a._v(" "),t("p",[a._v("动态链接器是一个独立于应用程序的进程，属于操作系统，当用户的程序需要加载动态库的时候动态链接器就开始工作了，很显然动态链接器不知道用户通过 gcc 编译程序的时候通过 "),t("code",[a._v("-L")]),a._v(" 指定的路径。")]),a._v(" "),t("p",[a._v("所以动态链接器在搜索某一个动态库时实际上是遵循了一个默认的搜索顺序，按照优先级从高到低顺序分别为：")]),a._v(" "),t("ol",[t("li",[a._v("可执行文件内部的 "),t("code",[a._v("DT_RPATH")]),a._v(" 字段")]),a._v(" "),t("li",[a._v("系统环境变量 "),t("code",[a._v("LD_LIBRARY_PATH")])]),a._v(" "),t("li",[a._v("系统动态库的缓存文件 "),t("code",[a._v("/etc/ld.so.cache")])]),a._v(" "),t("li",[a._v("存储动态库、静态库的系统目录 "),t("code",[a._v("/lib")]),a._v("、"),t("code",[a._v("/usr/lib")]),a._v(" 等")])]),a._v(" "),t("p",[a._v("如果都没找到，动态链接器就会提示动态库找不到的错误。")]),a._v(" "),t("hr"),a._v(" "),t("p",[t("strong",[a._v("🔧 小工具：ldd 命令")]),a._v(" 用于查看可执行程序所以来的动态库以及是否可以找到，如果一行的最后是一个地址，比如 "),t("code",[a._v("(0x00007fff81fcd000)")]),a._v("，说明动态库可以找到，反之说明找不到")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ ldd main\n        linux-vdso.so.1 (0x00007fff81fcd000)\n        libcalc.so => not found\n        libc.so.6 => /lib64/libc.so.6 (0x00007f0162cb6000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007f016307b000)\n")])])]),t("hr"),a._v(" "),t("p",[t("strong",[a._v("解决找不到动态库的问题")])]),a._v(" "),t("p",[a._v("方法一：配置 "),t("code",[a._v("LD_LIBRARY_PATH")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 为当前回话设置（不推荐）")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LD_LIBRARY_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LD_LIBRARY_PATH")]),a._v(":/home/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("./test_generated_lib\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LD_LIBRARY_PATH")]),a._v("\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 推荐修改用户级别设置 ~/.bashrc")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 生效：. ~/.bashrc")]),a._v("\n")])])]),t("p",[a._v("方法二：更新 "),t("code",[a._v("/etc/ld.so.cache")]),a._v("，这个文件是二进制文件，无法直接修改，需要进行以下几步")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 第一步：添加动态库所在路径（不包含动态库文件名），独占一行")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /etc/ld.so.conf\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 第二步：使用 ldconfig 更新 ld.so.conf 中的数据到 ld.so.cache 中")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ldconfig\n")])])]),t("p",[a._v("方法三：将库文件拷贝到系统库目录 "),t("code",[a._v("/lib")]),a._v(" 或 "),t("code",[a._v("/usr/lib")]),a._v(" 中（也可以是创建软连接）")]),a._v(" "),t("blockquote",[t("p",[a._v("本人没验证通过")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建库文件的软连接到系统目录 /lib/ 或 /usr/lib 中")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("su")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" /home/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("./test_generated_lib/libcalc.so /usr/lib/libcalc.so\n")])])]),t("h3",{attrs:{id:"优缺点对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优缺点对比"}},[a._v("#")]),a._v(" 优缺点对比")]),a._v(" "),t("p",[t("strong",[a._v("静态库")])]),a._v(" "),t("ul",[t("li",[a._v("优点：库被打包到程序中，加载速度快；发布时无需提供静态库，移植方便")]),a._v(" "),t("li",[a._v("缺点：相同的库文件可能被多个程序加载多次，耗费资源，浪费内存；库文件更新需要重新编译项目生成新的可执行程序，浪费时间")])]),a._v(" "),t("p",[t("strong",[a._v("动态库")])]),a._v(" "),t("ul",[t("li",[a._v("优点：不同进程间共享资源，节省内存空间；动态库升级简单，只需要替换库文件，无需重新编译应用程序；开发者可以控制何时加载动态库，不调用库函数时动态库不会被加载")]),a._v(" "),t("li",[a._v("缺点：加载速度比静态库慢，考虑到当前计算机性能可以忽略此差异；发布可执行程序时需要一并提供它所依赖的动态库")])]),a._v(" "),t("h3",{attrs:{id:"选择标准"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择标准"}},[a._v("#")]),a._v(" 选择标准")]),a._v(" "),t("p",[a._v("如果源文件比较少，则制作为静态库；如果比较多，则制作为动态库。")]),a._v(" "),t("h2",{attrs:{id:"makefile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#makefile"}},[a._v("#")]),a._v(" makefile")]),a._v(" "),t("p",[a._v("当源文件比较少时，使用 gcc 命令进行程序编译是比较方便的。但当工程中的文件数逐渐增多，甚至变得十分庞大的时候，使用 gcc 命令编译就会显得力不从心。这种情况下我们需要借助项目构造工具 "),t("code",[a._v("make")]),a._v(" 帮助我们完成这个艰巨的任务。")]),a._v(" "),t("p",[t("code",[a._v("make")]),a._v(" 是一个用于解释 Makefile 文件的工具，一般来说，大多数 IDE 都有这个命令。")]),a._v(" "),t("p",[t("code",[a._v("make")]),a._v(" 工具在构造项目时需要加载一个叫做 "),t("code",[a._v("makefile")]),a._v(" 的文件，该文件定义了整个工程的编译规则。具体地，makefile 定义了一系列规则来指定哪些文件需要先编译，哪些文件需要后编译，那些文件需要重新编译，甚至于进行更加复杂的操作。makefile 就像一个 shell 脚本一样，其中可以执行操作系统的命令。")]),a._v(" "),t("p",[a._v("makefile 带来的最大好处是"),t("strong",[a._v("自动化编译")]),a._v("。只需一个 make 命令，整个项目完全自动编译，极大地提高了软件开发效率。")]),a._v(" "),t("p",[a._v("makefile 文件有两种命名方式，"),t("code",[a._v("makefile")]),a._v("/"),t("code",[a._v("Makefile")]),a._v("，构建项目的时候在哪个目录下执行"),t("code",[a._v("make")]),a._v("构建命令，这个目录下的 makefile 文件就会被加载。")]),a._v(" "),t("h3",{attrs:{id:"规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#规则"}},[a._v("#")]),a._v(" 规则")]),a._v(" "),t("p",[a._v("makfile 的框架是由"),t("strong",[a._v("规则")]),a._v("构成的。规则的格式为")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("targe1,target2,...:depend1,depend2,...\n\tcommand-1\n\tcommand-2\n\t...\n")])])]),t("ul",[t("li",[t("code",[a._v("command")]),a._v("命令：当前规则所定义的动作，支持多条，通常为 shell 命令，比如 cd 目录、gcc 编译命令、生成库文件等")]),a._v(" "),t("li",[t("code",[a._v("depend")]),a._v("依赖：定义规则所需的依赖文件，支持为空或多项，可以在命令中使用这些依赖。A 规则的依赖可以是 B 规则的目标，这称为"),t("strong",[a._v("规则嵌套")])]),a._v(" "),t("li",[t("code",[a._v("target")]),a._v("目标：指定规则产出的目标文件，支持多项，目标文件应该与命令对应（不对应也没关系）。如果一个目标没有被生成，则该目标被称为"),t("strong",[a._v("伪目标")])])]),a._v(" "),t("p",[a._v("举例：")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 有源文件 a.c、b.c、c.c、head.h 四个，需要生成可执行程序 app")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("a.c b.c c.c\n\tgcc a.c b.c c.c -o app\n")])])]),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 示例：有多个目标、多个依赖、多条命令")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("app1,app2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("a.c b.c c.c d.c\n\tgcc a.c b.c -o app1\n\tgcc c.c d.c -o app2\n")])])]),t("blockquote",[t("p",[a._v("在规则中定义多条命令时，默认情况下第一条执行失败后就不会执行后续的命令了")]),a._v(" "),t("p",[a._v("解决：在可能出错的命令前添加"),t("code",[a._v("-")]),a._v("，比如 "),t("code",[a._v("- mkdir /abc")]),a._v("，这样如果该条命令失败了其后的命令依旧会继续执行")])]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 示例：规则嵌套")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 规则1。三个依赖项分别依赖了三条后续的规则。依赖项可以为空或不存在的")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("a.o b.o c.o\n\tgcc a.o b.o c.o -o app\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# .c 分别生成 .o 文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("a.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("a.c\n\tgcc -c a.c\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("b.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("b.c\n\tgcc -c b.c\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("c.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("c.c\n\tgcc -c c.c\n")])])]),t("h3",{attrs:{id:"工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[a._v("#")]),a._v(" 工作原理")]),a._v(" "),t("h4",{attrs:{id:"规则的运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#规则的运行"}},[a._v("#")]),a._v(" 规则的运行")]),a._v(" "),t("p",[a._v("在调用 make 命令编译程序是，make 命令会"),t("strong",[a._v("先找到 makefile 文件中从上到下第一条规则")]),a._v("，分析并执行其命令。如果第一条规则所指定的依赖（文件）是不存在的，那么会按照依赖项的先后顺序"),t("strong",[a._v("递归搜索")]),a._v("其他规则以生成每个规则所需的依赖，直到所有依赖都被生成再执行第一条规则的所有命令。如果某项依赖或中间依赖不能被生成，则会报错。")]),a._v(" "),t("p",[a._v("示例：")]),a._v(" "),t("p",[t("code",[a._v("Makefile")])]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("c")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("x y\n\tcat x y > c\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("y")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\techo "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" > y\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("x")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\techo "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'x'")]),a._v(" > x\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("z")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\techo "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'zzz~'")]),a._v("\n")])])]),t("p",[a._v("使用 make 命令")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'x'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" x\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" y\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" x y "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" c\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" x\nmake: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'x'")]),a._v(" is up to date.\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" z\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'zzz~'")]),a._v("\nzzz~\n")])])]),t("p",[a._v("尝试做一些改变：修改第一个规则的依赖为 "),t("code",[a._v("x y q")]),a._v(" 再次 make 会发生什么？")]),a._v(" "),t("h4",{attrs:{id:"命令执行时机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令执行时机"}},[a._v("#")]),a._v(" 命令执行时机")]),a._v(" "),t("p",[a._v("为了简化问题描述，假设 makefile 为")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("dog.png")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("dog.jpg\n\timg-converter dog.jpg dog.png "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"注:命令是自己造的"')]),a._v("\n")])])]),t("ul",[t("li",[a._v("如果目标不存在，则执行命令通过依赖生成目标，此时"),t("strong",[a._v("目标文件更新时间 > 依赖文件更新时间")])]),a._v(" "),t("li",[a._v("如果目标存在，则需要比对二者的更新时间：\n"),t("ul",[t("li",[t("code",[a._v("目标>依赖")]),a._v("：依赖没变，同时假定没有第三者修改过目标，所以无需再次执行命令")]),a._v(" "),t("li",[t("code",[a._v("目标<依赖")]),a._v("：依赖改变了，需要再次执行命令以更新目标")])])])]),a._v(" "),t("h4",{attrs:{id:"自动构建依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动构建依赖"}},[a._v("#")]),a._v(" 自动构建依赖")]),a._v(" "),t("p",[a._v("make 是一个功能强大的构建工具，虽然 make 需要根据 makefile 中指定的规则来完成源文件的编译，但开发者有时难免会因为不严谨而漏写一些规则，此时仍旧可以编译成功，这是因为 make 具有自动推导的能力，不完全依赖 makefile。")]),a._v(" "),t("p",[a._v("比如：使用 make 编译 .c 文件，源文件的编译规则不用明确给出。这是因为 make 运行时会使用一个默认的编译规则，按照默认规则完成对 .c 文件的编译，生成对应的 .o 文件。它使用命令 "),t("code",[a._v("cc -c")]),a._v(" 来编译 .c 文件。")]),a._v(" "),t("p",[a._v("示例：只需给出 .o 文件名，make 工具就会自动为这个 .o 文件寻找合适的依赖文件，即对应的同名 .c 文件，并使用默认的命令来构建这个 .o 文件")]),a._v(" "),t("p",[t("code",[a._v("Makefile")])]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 假设有源文件 head.h,add.c,div.c,mul.c,sub.c,main.c")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("calc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("add.o sub.o div.o mul.o main.o\n    gcc add.o sub.o div.o mul.o main.o -o main\n")])])]),t("p",[a._v("使用 make 命令生成可执行文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\ncc    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" add.o add.c\ncc    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" sub.o sub.c\ncc    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" div.o div.c\ncc    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" mul.o mul.c\ncc    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" main.o main.c\ngcc add.o sub.o div.o mul.o main.o "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" main\n\n$ ./main\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),a._v(", b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v("\na+b"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("50")]),a._v("\na-b"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\na*b"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("600")]),a._v("\na/b"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.500000")]),a._v("\n")])])]),t("h3",{attrs:{id:"编写-makefile-开始编译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写-makefile-开始编译"}},[a._v("#")]),a._v(" 编写 makefile 开始编译")]),a._v(" "),t("p",[a._v("准备"),t("a",{attrs:{href:"https://gitee.com/egu0/gcc_n_makefile/tree/586ba87f404d9c420116a39a6169eddbc991b51c/makefile/01_basis",target:"_blank",rel:"noopener noreferrer"}},[a._v("项目结构"),t("OutboundLink")],1),a._v("：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".\n├── add.c\n├── div.c\n├── head.h\n├── main.c\n├── Makefile\n├── mul.c\n└── sub.c\n")])])]),t("p",[t("code",[a._v("Makefile")])]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("add.c sub.c div.c mul.c main.c\n\tgcc add.c sub.c div.c mul.c main.c -o main\n")])])]),t("hr"),a._v(" "),t("p",[a._v("思考：以上 Makefile 有何问题？")]),a._v(" "),t("p",[a._v("答：资源浪费。如果只改动了一个 .c 文件，则重新构建时也会同时编译其他 .c 文件")]),a._v(" "),t("p",[a._v("改进：指定依赖 .o 文件")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("add.o sub.o div.o mul.o main.o\n\tgcc add.o sub.o div.o mul.o main.o -o main\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("add.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("add.c\n\tgcc add.c -c\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("sub.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("sub.c\n\tgcc sub.c -c\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("mul.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("mul.c\n\tgcc mul.c -c\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("div.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("div.c\n\tgcc div.c -c\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("main.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("main.c\n\tgcc main.c -c\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\ngcc add.c "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v("\ngcc sub.c "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v("\ngcc div.c "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v("\ngcc mul.c "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v("\ngcc main.c "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v("\ngcc add.o sub.o div.o mul.o main.o "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" main\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\ngcc main.c "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v("\ngcc add.o sub.o div.o mul.o main.o "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" main\n")])])]),t("hr"),a._v(" "),t("p",[a._v("以上改动后的 makefile 有何问题呢")]),a._v(" "),t("p",[a._v("答：如果源文件太多，"),t("code",[a._v("gcc x.c -c")]),a._v(" 这一步需要重复很多次，很费劲。")]),a._v(" "),t("p",[a._v("改进：通过"),t("strong",[a._v("变量")]),a._v("解决")]),a._v(" "),t("h3",{attrs:{id:"变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),t("p",[a._v("使用 makefile 定义规则时，为了使代码更灵活，我们可以在里边使用变量。makefile 中变量分为三种："),t("code",[a._v("自定义变量")]),a._v("、"),t("code",[a._v("预定义变量")]),a._v(" 和 "),t("code",[a._v("自动变量")])]),a._v(" "),t("h4",{attrs:{id:"自定义变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义变量"}},[a._v("#")]),a._v(" 自定义变量")]),a._v(" "),t("p",[a._v("语法：添加自定义变量、使用自定义变量")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 正确示例")]),a._v("\nkey"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("value\nname"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("butterfly\nnumber"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 错误示例")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#content")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\techo "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("另一个示例")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#main:add.o sub.o div.o mul.o main.o")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#\tgcc add.o sub.o div.o mul.o main.o -o main")]),a._v("\n\nobj_files"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("add.o sub.o div.o mul.o main.o\ntarget"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("main\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),a._v("(target)")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj_files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\tgcc "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj_files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -o "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h4",{attrs:{id:"预定义变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预定义变量"}},[a._v("#")]),a._v(" 预定义变量")]),a._v(" "),t("p",[a._v("用户可以直接使用 makefile 重一些已经定义的变量，这些变量通常被称为预定义变量，它们的名字一般是大写的：")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("变 量 名")]),a._v(" "),t("th",[a._v("含 义")]),a._v(" "),t("th",[a._v("默 认 值")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("AR")]),a._v(" "),t("td",[a._v("生成静态库库文件的程序名称")]),a._v(" "),t("td",[a._v("ar")])]),a._v(" "),t("tr",[t("td",[a._v("AS")]),a._v(" "),t("td",[a._v("汇编编译器的名称")]),a._v(" "),t("td",[a._v("as")])]),a._v(" "),t("tr",[t("td",[a._v("CC")]),a._v(" "),t("td",[a._v("C 语言编译器的名称")]),a._v(" "),t("td",[a._v("cc")])]),a._v(" "),t("tr",[t("td",[a._v("CPP")]),a._v(" "),t("td",[a._v("C 语言预编译器的名称")]),a._v(" "),t("td",[a._v("$(CC) -E")])]),a._v(" "),t("tr",[t("td",[a._v("CXX")]),a._v(" "),t("td",[a._v("C++语言编译器的名称")]),a._v(" "),t("td",[a._v("g++")])]),a._v(" "),t("tr",[t("td",[a._v("FC")]),a._v(" "),t("td",[a._v("FORTRAN 语言编译器的名称")]),a._v(" "),t("td",[a._v("f77")])]),a._v(" "),t("tr",[t("td",[a._v("RM")]),a._v(" "),t("td",[a._v("删除文件程序的名称")]),a._v(" "),t("td",[a._v("rm -f")])]),a._v(" "),t("tr",[t("td",[a._v("ARFLAGS")]),a._v(" "),t("td",[a._v("生成静态库库文件程序的选项")]),a._v(" "),t("td",[a._v("无默认值")])]),a._v(" "),t("tr",[t("td",[a._v("ASFLAGS")]),a._v(" "),t("td",[a._v("汇编语言编译器的编译选项")]),a._v(" "),t("td",[a._v("无默认值")])]),a._v(" "),t("tr",[t("td",[a._v("CFLAGS")]),a._v(" "),t("td",[a._v("C 语言编译器的编译选项")]),a._v(" "),t("td",[a._v("无默认值")])]),a._v(" "),t("tr",[t("td",[a._v("CPPFLAGS")]),a._v(" "),t("td",[a._v("C 语言预编译的编译选项")]),a._v(" "),t("td",[a._v("无默认值")])]),a._v(" "),t("tr",[t("td",[a._v("CXXFLAGS")]),a._v(" "),t("td",[a._v("C++语言编译器的编译选项")]),a._v(" "),t("td",[a._v("无默认值")])]),a._v(" "),t("tr",[t("td",[a._v("FFLAGS")]),a._v(" "),t("td",[a._v("FORTRAN 语言编译器的编译选项")]),a._v(" "),t("td",[a._v("无默认值")])])])]),a._v(" "),t("p",[a._v("示例")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[a._v("obj_files"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("add.o sub.o div.o mul.o main.o\ntarget"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("main\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过 CFLAGS 指定 gcc 编译参数")]),a._v("\nCFLAGS"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("-o3\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),a._v("(target)")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj_files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\tgcc "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj_files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -o "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("CFLAGS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h4",{attrs:{id:"自动变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动变量"}},[a._v("#")]),a._v(" 自动变量")]),a._v(" "),t("p",[a._v("自动变量的特点：")]),a._v(" "),t("ol",[t("li",[a._v("只能在规则的命令中使用")]),a._v(" "),t("li",[a._v("提供了多种方式来表示目标文件或依赖文件")])]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("变量")]),a._v(" "),t("th",[a._v("描述")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[t("code",[a._v("$*")])]),a._v(" "),t("td",[a._v("表示目标文件的名称，不包含扩展名。"),t("strong",[a._v("没验证出来")])])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("$@")])]),a._v(" "),t("td",[a._v("表示目标文件的名称，包含扩展名")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("$<")])]),a._v(" "),t("td",[a._v("表示依赖项中第一个依赖文件的名称，包含扩展名")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("$?")])]),a._v(" "),t("td",[a._v("表示依赖项中所有比目标文件时间戳晚的依赖文件，以空格分割")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("$+")])]),a._v(" "),t("td",[a._v("表示所有依赖文件名称，以空格分割，按照出现的先后为顺序，"),t("br"),a._v("可能包含重复的项")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("$^")])]),a._v(" "),t("td",[a._v("表示所有依赖文件名称，以空格分割，按照出现的先后为顺序，"),t("br"),a._v("不包含重复的项")])])])]),a._v(" "),t("p",[a._v("示例")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#main:add.o sub.o div.o mul.o main.o")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#\tgcc add.o sub.o div.o mul.o main.o -o main")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("add.o sub.o div.o mul.o main.o\n\tgcc "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$^")]),a._v(" -o "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v("\n")])])]),t("h3",{attrs:{id:"模式匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模式匹配"}},[a._v("#")]),a._v(" 模式匹配")]),a._v(" "),t("p",[a._v("之前的一个 Makefile：")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("add.o sub.o div.o mul.o main.o\n\tgcc add.o sub.o div.o mul.o main.o -o main\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("add.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("add.c\n\tgcc add.c -c\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("sub.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("sub.c\n\tgcc sub.c -c\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("mul.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("mul.c\n\tgcc mul.c -c\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("div.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("div.c\n\tgcc div.c -c\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("main.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("main.c\n\tgcc main.c -c\n")])])]),t("p",[a._v("可以发现，3~12 行所定义的规则都在做同一件事，但是由于文件名不同不得不在文件中写出多个规则，这就让 makefile 中的代码显得很冗余。")]),a._v(" "),t("p",[a._v("我们可以将 3~12 中所有规则整理成一个模板，所有类似的操作都通过模板去匹配，这样可以简化 makefile 代码，但也降低了代码可读性")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模式匹配")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# %是一个通配符，指代文件名。%< 是一个自动变量，也可以是 $^")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("%.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("%.c\n\tgcc %< -c\n")])])]),t("p",[a._v("改造后的 "),t("code",[a._v("Makefile")])]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 定义变量")]),a._v("\nobj_files"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("add.o sub.o div.o mul.o main.o\ntarget"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("main\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 定义规则")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 匹配上 %.o 的依赖会走模式模版")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),a._v("(target)")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj_files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\tgcc "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj_files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -o "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模式匹配模版")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("%.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("%.c\n\tgcc "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$<")]),a._v(" -c\n")])])]),t("p",[a._v("还有哪些问题呢？")]),a._v(" "),t("p",[a._v("答：如果项目中源文件比较多，那么此时创建变量 "),t("code",[a._v("obj_files")]),a._v(" 时需要指定一大堆 .o 文件，很麻烦")]),a._v(" "),t("p",[a._v("解决方法：调用 makefile 中的函数自动搜索文件名")]),a._v(" "),t("h3",{attrs:{id:"函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[a._v("#")]),a._v(" 函数")]),a._v(" "),t("p",[a._v("makefile 中有很多函数并且"),t("strong",[a._v("所有函数都是有返回值的")]),a._v("，与其他语言中函数调用有所不同的是，makefile 中调用函数的方式是 "),t("code",[a._v("$(函数名 参数1 餐数2 ...)")])]),a._v(" "),t("h4",{attrs:{id:"wildcard"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wildcard"}},[a._v("#")]),a._v(" wildcard")]),a._v(" "),t("p",[a._v("作用：获取指定目录下指定类型的文件名，返回值是一个字符串，表示搜索的文件，它们以空格相隔")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wildcard")]),a._v(" pattern-1 pattern-2 ..."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#例如")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wildcard")]),a._v(" ./*.c ./sub/*.c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("ul",[t("li",[t("code",[a._v("pattern")]),a._v("参数：文件匹配模式，支持多个")]),a._v(" "),t("li",[a._v("返回值：文件列表，字符串形式，以空格分割")])]),a._v(" "),t("p",[a._v("示例")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[a._v("res_path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wildcard")]),a._v(" ./*.c ./sub1/*.c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\techo "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("res_path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h4",{attrs:{id:"patsubst"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#patsubst"}},[a._v("#")]),a._v(" patsubst")]),a._v(" "),t("p",[a._v("作用：按照指定的模式替换指定的文件名的后缀")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("patsubst")]),a._v(" <pattern>, <replacement>, <text>"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 参数之间需要添加 ,")]),a._v("\n")])])]),t("ul",[t("li",[t("code",[a._v("pattern")]),a._v(" 模式字符串，指出要被替换的后缀。无需关心文件名和路径，用"),t("code",[a._v("%")]),a._v("表示通配符，比如"),t("code",[a._v("%.c")]),a._v(" 表示替换 "),t("code",[a._v(".c")]),a._v(" 后缀")]),a._v(" "),t("li",[t("code",[a._v("replacement")]),a._v(" 模式字符串，同 "),t("code",[a._v("pattern")]),a._v(" ，表示后缀要被替换成什么，比如 "),t("code",[a._v("%.o")]),a._v(" 表示文件后缀要被替换成"),t("code",[a._v(".o")])]),a._v(" "),t("li",[t("code",[a._v("text")]),a._v(" 字符串，表示要被处理的路径")])]),a._v(" "),t("p",[a._v("示例")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 搜索文件")]),a._v("\nres_path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wildcard")]),a._v(" ./*.c ./sub1/*.c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换后缀")]),a._v("\nobj_file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("patsubst")]),a._v(" %.c, %.o, "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("res_path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\techo "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj_file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h3",{attrs:{id:"完善-makefile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完善-makefile"}},[a._v("#")]),a._v(" 完善 makefile")]),a._v(" "),t("p",[a._v("之前得到的 Makefile")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 定义变量")]),a._v("\nobj_files"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("add.o sub.o div.o mul.o main.o\ntarget"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("main\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 定义规则")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 匹配上 %.o 的依赖会走模式模版")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),a._v("(target)")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj_files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\tgcc "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj_files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -o "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模式匹配模版")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("%.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("%.c\n\tgcc "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$<")]),a._v(" -c\n")])])]),t("p",[a._v("继续优化：使用函数搜索文件、替换文件后缀")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[a._v("c_files"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wildcard")]),a._v(" ./*.c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# obj_files=add.o sub.o div.o mul.o main.o")]),a._v("\nobj_files"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("patsubst")]),a._v(" %.c, %.o, "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("c_files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\ntarget"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("main\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 匹配上 %.o 的依赖会走模式模版")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),a._v("(target)")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj_files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\tgcc "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj_files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -o "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模式匹配模版")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("%.o")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("%.c\n\tgcc "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$<")]),a._v(" -c\n")])])]),t("h3",{attrs:{id:"伪目标的声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#伪目标的声明"}},[a._v("#")]),a._v(" 伪目标的声明")]),a._v(" "),t("p",[t("code",[a._v("Makefile")])]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[a._v("...\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不添加依赖，clean 是一个伪目标，不对应任何实体文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("clean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\trm -rf *.o "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("问题：当 makefile 同级目录下有一个名为 "),t("code",[a._v("clean")]),a._v(" 文件，再执行"),t("code",[a._v("make clean")]),a._v("时会报错")]),a._v(" "),t("p",[a._v("原因：之前【工作原理/命令执行时机】一节讲过，当目标文件不存在时一定可以执行；如果存在了则需要比较目标和依赖两文件的时间戳，满足条件才可以执行")]),a._v(" "),t("p",[a._v("解决：声明"),t("code",[a._v("clean")]),a._v("是一个伪目标，这样 make 就不会对它进行时间戳检测了")]),a._v(" "),t("div",{staticClass:"language-makefile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-makefile"}},[t("code",[a._v("...\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 声明 clean 是一个伪目标，这样 make 就不会对它进行时间戳检测了")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin-target builtin"}},[a._v(".PHONY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("clean\n"),t("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("clean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\trm -rf *.o "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h2",{attrs:{id:"gdb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gdb"}},[a._v("#")]),a._v(" gdb")]),a._v(" "),t("p",[a._v("gdb 是 GNU 软件系统社区提供的调试器，同 gcc 配套组成了一套完整的开发环境，可移植性好，支持非常多的体系结构并被移植到各种系统中（包括各种类 Unix 系统和 Windows 系统里的 MinGW 和 Cygwin）。此外，除了 C 语言外，gcc/gdb 还支持包括 C++、Objective-C、Ada 和 Pascal 等各种语言后端的编译和调试。gcc/gdb 是 Linux 和许多类 Unix 系统中的标准开发环境，Linux 内核也是专门针对 gcc 进行编码的。")]),a._v(" "),t("p",[a._v("gdb 是一套字符界面的程序集，可以使用命令 gdb 加载要调试的程序。")]),a._v(" "),t("h3",{attrs:{id:"调试准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调试准备"}},[a._v("#")]),a._v(" 调试准备")]),a._v(" "),t("p",[a._v("使用 gcc 编译程序时，如果为了进行调试，需要添加"),t("code",[a._v("-g")]),a._v("参数。另外还有一些选项，比如尽量不影响程序行为的情况下使用"),t("code",[a._v("-O0")]),a._v("关掉编译器的优化选项；使用"),t("code",[a._v("-Wall")]),a._v("选项打开所有提示信息可以发现很多问题从而避免一些不必要的 BUG。")]),a._v(" "),t("p",[t("code",[a._v("-g")]),a._v(" 选项的作用：在可执行文件中加入源代码信息，比如可执行文件中第几条机器指令对应源代码的第几行，但并不是把整个源文件嵌入到可执行文件中，所以在调试时必须保证 gdb 能找到源文件。")]),a._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//main.c")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("<stdio.h>")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("define")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[a._v("NUM")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")])])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" argc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"参数个数：%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" argc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" argc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" NUM"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"参数 %d: %s\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("示例：生成可用于调试的可执行程序")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可调试版本")]),a._v("\n$ gcc main.c "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-g")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Wall")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" main1\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不可调试版本")]),a._v("\n$ gcc main.c "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Wall")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" main2\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 比较二者大小")]),a._v("\n$ ll main1 main2\n-rwxrwxr-x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" engure engure "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("19912")]),a._v(" Feb "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v(":56 main1\n-rwxrwxr-x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" engure engure "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("17528")]),a._v(" Feb "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v(":56 main2\n")])])]),t("h3",{attrs:{id:"gdb-基本使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gdb-基本使用"}},[a._v("#")]),a._v(" gdb 基本使用")]),a._v(" "),t("p",[t("strong",[a._v("gdb 启动和退出")])]),a._v(" "),t("ul",[t("li",[a._v("启动："),t("code",[a._v("gdb <executable>")])]),a._v(" "),t("li",[a._v("退出：使用 q 或 quit 命令")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ gdb main1 -"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" 启动\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("gdb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" l\t\t  -"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" 查看源码\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("gdb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" q     -"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" 退出\n")])])]),t("p",[a._v("在命令行中执行程序，为程序传递参数")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ ./main1 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n参数个数：4\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n参数 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(": ./main1\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n参数 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(": "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n参数 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(": "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n参数 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(": "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n")])])]),t("p",[t("strong",[a._v("在 gdb 中调试时，为程序传递参数")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("...\n(gdb) set args 1 2 3\n(gdb) show args\n")])])]),t("p",[t("strong",[a._v("启动程序")]),a._v("（设置完参数后），有两种方法")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 方法1：执行 main 中第一行后停下来。输入命令 c/continue 继续执行\n(gdb) start\n\n# 方法2：r/run，执行 main，遇断点则停下，否知执行完毕\n(gdb) run\n")])])]),t("h3",{attrs:{id:"查看代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看代码"}},[a._v("#")]),a._v(" 查看代码")]),a._v(" "),t("p",[a._v("通过"),t("code",[a._v("l")]),a._v(" 或 "),t("code",[a._v("list")]),a._v("命令我们可以查看项目中任意一个文件中的内容，并且可以通过文件行号、函数名等方式查看")]),a._v(" "),t("h4",{attrs:{id:"查看当前文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看当前文件"}},[a._v("#")]),a._v(" 查看当前文件")]),a._v(" "),t("p",[a._v("一般来说一个项目中有很多源文件，默认情况下可通过 "),t("code",[a._v("list")]),a._v(" 命令查看程序入口函数 "),t("code",[a._v("main")]),a._v(" 所在那个文件的代码。简单来说，启动 gdb 后，默认的当前文件为 main 函数所在的文件。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 从第一行开始查看\n(gdb) l\n\n# 查看指定行号附近的代码\n(gdb) l 行号\n\n# 查看指定函数的代码\n(gdb) l 函数名\n")])])]),t("p",[a._v("注意：通过 list 命令查看文件代码，"),t("strong",[a._v("默认显示 10 行")]),a._v("，如果要"),t("strong",[a._v("继续查看")]),a._v("后边的内容，可以继续执行 list 命令，也可以直接按回车（表示再次执行上一次执行的哪个 gdb 命令）")]),a._v(" "),t("h4",{attrs:{id:"切换文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切换文件"}},[a._v("#")]),a._v(" 切换文件")]),a._v(" "),t("p",[a._v("若要查看其他文件，只需要在 list 命令后边将要查看的文件名指定出来就可以了。")]),a._v(" "),t("p",[a._v("切换命令执行完后，这个文件就变了当前文件，即"),t("strong",[a._v("自动文件切换")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("(gdb) l 文件名:行号\n# 比如 (gdb) l select.cpp:selectionSort\n\n(gdb) l 文件名:函数\n# 比如 (gdb) l select.cpp:selectionSort\n")])])]),t("h4",{attrs:{id:"设置显示的行数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置显示的行数"}},[a._v("#")]),a._v(" 设置显示的行数")]),a._v(" "),t("p",[a._v("默认通过 list 命令只能一次只能查看 10 行代码，如果想看的更多，可以通过"),t("code",[a._v("set listsize")]),a._v("设置。同样地，可以通过"),t("code",[a._v("show listsize")]),a._v("查看当前显示的行数。这其中的 "),t("code",[a._v("listsize")]),a._v(" 可简写为 "),t("code",[a._v("list")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 查看\n(gdb) show listsize\nNumber of source lines gdb will list by default is 10.\n(gdb) show list\nNumber of source lines gdb will list by default is 10.\n\n# 设置\n(gdb) set listsize 20\n(gdb) set list 20\n")])])]),t("hr"),a._v(" "),t("p",[a._v("实操："),t("a",{attrs:{href:"https://gitee.com/egu0/gcc_n_makefile/tree/305a47993478cd023fc5f579da84bb373449d838/gdb/02_list",target:"_blank",rel:"noopener noreferrer"}},[a._v("目录结构"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".\n├── head.h\n├── insert.cpp\n├── Makefile\n├── select.cpp\n└── test.cpp\n")])])]),t("h3",{attrs:{id:"断点操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#断点操作"}},[a._v("#")]),a._v(" 断点操作")]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("break")]),a._v(" 或 "),t("code",[a._v("b")]),a._v(" 命令在代码的某一行打断点，进行调试时，程序运行到断点位置就会阻塞，这样我们可以通过 gdb 得到我们想要的信息了比如某个变量的实际值。")]),a._v(" "),t("h4",{attrs:{id:"设置-查看断点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置-查看断点"}},[a._v("#")]),a._v(" 设置&查看断点")]),a._v(" "),t("p",[a._v("断点分类：")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("常规断点")]),a._v("（也叫普通断点）：程序运行到某个位置就会被阻塞")]),a._v(" "),t("li",[t("strong",[a._v("条件断点")]),a._v("：指定条件被满足时程序才会在断点处阻塞")])]),a._v(" "),t("hr"),a._v(" "),t("p",[t("strong",[a._v("一、在当前文件设置普通断点")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 打断点到某一行\n(gdb) b 行号\n\n# 打断点到函数体的第一行\n(gdb) b 函数名\n")])])]),t("p",[t("strong",[a._v("二、在其他文件（非当前文件）中设置普通断点")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("(gdb) b 文件名:行号\n\n(gdb) b 文件名:函数名\n")])])]),t("p",[t("strong",[a._v("三、条件断点")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 满足条件时，程序才会阻塞在断点的位置上。循环中常用\n(gdb) b 行数 if 变量名==某个值\n")])])]),t("hr"),a._v(" "),t("p",[t("strong",[a._v("示例")])]),a._v(" "),t("p",[t("a",{attrs:{href:"https://gitee.com/egu0/gcc_n_makefile/tree/aeb9b281ef9edd1f322d23061102dc5a0d28aa7c/gdb/02_list",target:"_blank",rel:"noopener noreferrer"}},[a._v("目录结构"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("img",{attrs:{src:s(294),alt:"image-20240222223823372"}})]),a._v(" "),t("p",[a._v("打完断点后使用 "),t("code",[a._v("info break")]),a._v(" （也可简写为 "),t("code",[a._v("i b")]),a._v("）"),t("strong",[a._v("查看断点信息")]),a._v("，各列属性为：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Num")]),a._v(" 表示断点号。"),t("strong",[a._v("重要")])]),a._v(" "),t("li",[t("code",[a._v("Type")]),a._v(" 表示断点类型，普通断点还是条件断点")]),a._v(" "),t("li",[t("code",[a._v("Enb")]),a._v(" 表示是否生效")]),a._v(" "),t("li",[t("code",[a._v("Address")]),a._v(" 断点地址")]),a._v(" "),t("li",[t("code",[a._v("What")]),a._v(" 断点所在位置")])]),a._v(" "),t("h4",{attrs:{id:"删除断点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除断点"}},[a._v("#")]),a._v(" 删除断点")]),a._v(" "),t("p",[t("code",[a._v("delete")]),a._v("、"),t("code",[a._v("del")]),a._v("、"),t("code",[a._v("d")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 删除某个断点\n(gdb) d 断点编号\n#比如 (gdb) d 1\n\n# 删除断点编号在 [X,Y] 区间的断点\n(gdb) d X-Y\n#比如 (gdb) d 1-3\n")])])]),t("h4",{attrs:{id:"修改断点状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改断点状态"}},[a._v("#")]),a._v(" 修改断点状态")]),a._v(" "),t("p",[t("strong",[a._v("禁用断点")]),a._v("，适用于想保留断点信息时")]),a._v(" "),t("p",[a._v("命令为："),t("code",[a._v("disable")]),a._v("、"),t("code",[a._v("dis")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 禁用某个断点\n(gdb) dis 断点编号\n\n# 禁用断点编号在 [X,Y] 区间的断点\n(gdb) dis X-Y\n")])])]),t("p",[t("strong",[a._v("启用断点")]),a._v("，命令为 "),t("code",[a._v("enable")]),a._v("、"),t("code",[a._v("ena")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 启用某个断点\n(gdb) ena 断点编号\n\n# 启用断点编号在 [X,Y] 区间的断点\n(gdb) ena X-Y\n")])])]),t("h3",{attrs:{id:"调试命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调试命令"}},[a._v("#")]),a._v(" 调试命令")]),a._v(" "),t("h4",{attrs:{id:"开始运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始运行"}},[a._v("#")]),a._v(" 开始运行")]),a._v(" "),t("p",[a._v("开始调试")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 方法1：执行 main 中第一行后停下来。输入命令 c/continue 继续执行\n(gdb) start\n\n# 方法2：r/run，执行 main，遇断点则停下，否知执行完毕\n(gdb) run\n")])])]),t("h4",{attrs:{id:"继续运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继续运行"}},[a._v("#")]),a._v(" 继续运行")]),a._v(" "),t("p",[a._v("假设程序被断点阻塞了，如果想让它继续执行，则可以使用 "),t("code",[a._v("continue")]),a._v(" 命令。")]),a._v(" "),t("p",[a._v("命令："),t("code",[a._v("continue")]),a._v("、"),t("code",[a._v("c")]),a._v("，会使程序继续运行，直到遇到下一个有效的断点")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("(gdb) c\n")])])]),t("h4",{attrs:{id:"手动打印信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手动打印信息"}},[a._v("#")]),a._v(" 手动打印信息")]),a._v(" "),t("p",[a._v("当程序阻塞在某个断点时，可以通过一些命令打印变量的名字或者变量的类型，并且还可以跟踪打印某个变量的值。")]),a._v(" "),t("p",[t("strong",[a._v("一、打印变量值")])]),a._v(" "),t("p",[a._v("命令："),t("code",[a._v("print")]),a._v(" 或 "),t("code",[a._v("p")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("(gdb) p 变量名\n")])])]),t("p",[a._v("如果变量是整数，则可以指定输出格式：")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("格式化字符")]),a._v(" "),t("th",[a._v("说明")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[t("code",[a._v("x")])]),a._v(" "),t("td",[a._v("以十六进制的形式打印出整数")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("d")])]),a._v(" "),t("td",[a._v("以有符号、十进制的形式打印出整数")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("u")])]),a._v(" "),t("td",[a._v("以无符号、十进制的形式打印出整数")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("o")])]),a._v(" "),t("td",[a._v("以八进制的形式打印出整数")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("t")])]),a._v(" "),t("td",[a._v("以二进制的形式打印出整数")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("f")])]),a._v(" "),t("td",[a._v("以浮点数的形式打印变量或表达式的值")])]),a._v(" "),t("tr",[t("td",[t("code",[a._v("c")])]),a._v(" "),t("td",[a._v("以字符形式打印变量或表达式的值")])])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("(gdb) p i\n$3 = 3\n\n(gdb) p/d i\n$4 = 3\n\n(gdb) p/o i\n$5 = 03\n")])])]),t("p",[t("strong",[a._v("二、打印变量类型")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("(gdb) ptype 变量名\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("(gdb) ptype i\ntype = int\n\n(gdb) ptype arr[0]\ntype = int\n")])])]),t("h4",{attrs:{id:"自动打印信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动打印信息"}},[a._v("#")]),a._v(" 自动打印信息")]),a._v(" "),t("p",[t("strong",[a._v("一、设置变量名自动显示")])]),a._v(" "),t("p",[a._v("和 "),t("code",[a._v("print")]),a._v(" 命令一样，"),t("code",[a._v("display")]),a._v(" 命令也可以用于调试阶段查看某个变量或表达式的值，它们的区别是：使用 display 命令查看变量或表达式的值，每当程序被断点阻塞执行时（例如单步执行），gdb 都会自动帮我们打印出来，而 print 命令则不会。")]),a._v(" "),t("p",[a._v("因此，当我们想频繁查看某个变量或表达式的值或者观察它的变化情况时，使用 display 命令可以一劳永逸。")]),a._v(" "),t("p",[a._v("另外，display 命令没有缩写形式")]),a._v(" "),t("p",[a._v("常见的两种语法格式：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 在变量的有效范围内，自动打印变量的值（设置一次，之后会自动打印）\n(gdb) display 变量名\n\n(gdb) display/格式化字符 变量名\n")])])]),t("p",[t("strong",[a._v("二、查看自动显示列表")])]),a._v(" "),t("p",[a._v("通过 "),t("code",[a._v("info display")]),a._v(" （或简写 "),t("code",[a._v("i display")]),a._v("）可以查看被 display 命令关注的变量或表达式")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("(gdb) info display\nAuto-display expressions now in effect:\nNum Enb Expression\n1:   y  arr\n2:   y  arr[i]\n")])])]),t("p",[a._v("三列说明：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Num")]),a._v(" 变量或表达式的编号，GDB 调试器为每个变量或表达式都分配有唯一的编号")]),a._v(" "),t("li",[t("code",[a._v("Enb")]),a._v(" 表示当前变量（表达式）是处于激活状态还是禁用状态")]),a._v(" "),t("li",[t("code",[a._v("Expression")]),a._v(" 被自动打印值的变量或表达式的名字")])]),a._v(" "),t("p",[t("strong",[a._v("三、修改自动显示状态")])]),a._v(" "),t("p",[a._v("对于不需要再打印的变量或表达式，可以将其"),t("strong",[a._v("删除或禁用")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 方式一、通过【undisplay + 编号或编号范围】删除\n(gdb) undisplay num1 num2 ...\n(gdb) undisplay X-Y\n\n# 方式二、通过【delete display + 编号或编号范围】删除\n(gdb) delete display num1 num2 ...\n(gdb) delete display X-Y\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("通过【disable display + 编号或编号范围】禁用\n(gdb) disable display num1 num2 ...\n(gdb) disable display X-Y\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("通过【enable display + 编号或编号范围】启用\n(gdb) enable display num1 num2 ...\n(gdb) enable display X-Y\n")])])]),t("h3",{attrs:{id:"单步调试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单步调试"}},[a._v("#")]),a._v(" 单步调试")]),a._v(" "),t("p",[a._v("当程序阻塞到某个断点上后，可以通过以下命令对程序进行单步调试。")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("next")]),a._v(" 可缩写为"),t("code",[a._v("n")]),a._v("，表示执行一步，如果当前行是一个函数调用则"),t("strong",[a._v("不会进入函数内部")])]),a._v(" "),t("li",[t("code",[a._v("step")]),a._v(" 可缩写为"),t("code",[a._v("s")]),a._v("，表示执行一步，如果当前行是一个函数调用则"),t("strong",[a._v("会进入函数内部")])]),a._v(" "),t("li",[t("code",[a._v("finish")]),a._v(" 功能是跳出所在函数体，如果想要跳出函数体必须保证当前函数体内"),t("strong",[a._v("没有有效断点")]),a._v("，否则无法跳出")]),a._v(" "),t("li",[t("code",[a._v("util")]),a._v(" 功能是跳出某个循环体。若要跳出循环体需要满足两个条件：\n"),t("ul",[t("li",[a._v("要跳出的循环体无有效断点")]),a._v(" "),t("li",[a._v("执行命令时所在的行必须是循环头部，即 "),t("code",[a._v("for(;;)")])])])])]),a._v(" "),t("h3",{attrs:{id:"设置变量值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置变量值"}},[a._v("#")]),a._v(" 设置变量值")]),a._v(" "),t("p",[a._v("通过上边的学习，我们已经学会了如何查看执行状态下某个变量或表达式的值，有的时候通过程序运行让变量等于某个值比较困难，这种情况下可以直接给某个变量进行值的设置。")]),a._v(" "),t("p",[a._v("比如想快速跳出 for 循环时，可以采用修改循环变量值的方式进行。")]),a._v(" "),t("p",[a._v("语法：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("(gdb) set var 变量名=值\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);